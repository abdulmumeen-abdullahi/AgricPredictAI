# -*- coding: utf-8 -*-
"""predict_disease.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1NpA23k8u_hHl3Mn6smWNwZukVK2Qh8H3
"""

import torch
from PIL import Image
import torchvision.transforms as transforms
import os
import gdown

DISEASE_MODEL_ID = "1O-K4s3tv3WTSouhUksPDA5u6gNQ_d0j1"
DISEASE_MODEL_PATH = "app/models/disease_model.pt"

def download_disease_model():
    if not os.path.exists(DISEASE_MODEL_PATH):
        url = f"https://drive.google.com/uc?id={DISEASE_MODEL_ID}"
        gdown.download(url, DISEASE_MODEL_PATH, quiet=False)

def load_disease_model():
    download_disease_model()
    model = torch.load(DISEASE_MODEL_PATH, map_location=torch.device('cpu'))
    model.eval()
    return model

def predict_disease(image_file):
    image = Image.open(image_file).convert("RGB")
    transform = transforms.Compose([
        transforms.Resize((224, 224)),
        transforms.ToTensor()
    ])
    input_tensor = transform(image).unsqueeze(0)
    model = load_disease_model()
    outputs = model(input_tensor)
    _, predicted = torch.max(outputs.data, 1)
    return predicted.item()  # map this index to a class label later